package boundaries;

import connexion.Connexion;
import daos.Globale;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;

/**
 *
 * @author quent
 */
public class MDI extends javax.swing.JFrame {

    private Connection icnx;
    
    /**
     * Creates new form MDI
     */
    public MDI() {
        initComponents();

        // Pour donner un titre à la fenêtre
        setTitle("MDI - Cinéscope 2017");
        // Pour afficher la fenêtre au centre de l'écran
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        // Pour rendre la fenêtre visible
        setVisible(true);
        
        icnx = Connexion.getConnexionMySQL("127.0.0.1", "cinescope2017", "3306", "root", "");
        System.out.println(icnx);
        
        Globale.setCnx(icnx);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        jMenuItemTransfertFichier = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuCrudPaysAdd = new javax.swing.JMenuItem();
        jMenuCrudPaysDelete = new javax.swing.JMenuItem();
        jMenuCrudPaysVisu = new javax.swing.JMenuItem();
        jMenuCrudPaysUpdate = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudArrondissements = new javax.swing.JMenuItem();
        jMenuCrudDepartements = new javax.swing.JMenuItem();
        jMenuCrudVilles = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudGenres = new javax.swing.JMenuItem();
        jMenuCrudRubriques = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudMedia = new javax.swing.JMenuItem();
        jMenuCrudAppreciation = new javax.swing.JMenuItem();
        jMenuCrudJournalistes = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudCinemas = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuCrudGenerique = new javax.swing.JMenuItem();
        jMenuFenetre = new javax.swing.JMenu();
        jMenuItemMosaiqueHorizontale = new javax.swing.JMenuItem();
        jMenuItemMosaiqueVerticale = new javax.swing.JMenuItem();
        jMenuItemMozaiqueCascade = new javax.swing.JMenuItem();
        jMenuItemFermer = new javax.swing.JMenuItem();
        jMenuItemFermerTout = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        fileMenu.setMnemonic('f');
        fileMenu.setText("Fichier");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Ouvrir");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        jMenuItemTransfertFichier.setText("Transfert fichier");
        jMenuItemTransfertFichier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTransfertFichierActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItemTransfertFichier);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Enregistrer");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Enregistrer sous");
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Quitter");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edition");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Couper");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copier");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Coller");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Supprimer");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        jMenu1.setText("CRUD");

        jMenuCrudPaysAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudPaysAdd.setText("Pays (Ajout)");
        jMenuCrudPaysAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudPaysAddActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudPaysAdd);

        jMenuCrudPaysDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudPaysDelete.setText("Pays (Suppression)");
        jMenuCrudPaysDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudPaysDeleteActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudPaysDelete);

        jMenuCrudPaysVisu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudPaysVisu.setText("Pays (Visualisation)");
        jMenuCrudPaysVisu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudPaysVisuActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudPaysVisu);

        jMenuCrudPaysUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudPaysUpdate.setText("Pays (Modification)");
        jMenuCrudPaysUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudPaysUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudPaysUpdate);
        jMenu1.add(jSeparator1);

        jMenuCrudArrondissements.setText("Arrondissements CRUD");
        jMenuCrudArrondissements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudArrondissementsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudArrondissements);

        jMenuCrudDepartements.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudDepartements.setText("Départements CRUD");
        jMenuCrudDepartements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudDepartementsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudDepartements);

        jMenuCrudVilles.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudVilles.setText("Villes CRUD");
        jMenuCrudVilles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudVillesActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudVilles);
        jMenu1.add(jSeparator2);

        jMenuCrudGenres.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudGenres.setText("Genres CRUD");
        jMenuCrudGenres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudGenresActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudGenres);

        jMenuCrudRubriques.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuCrudRubriques.setText("Rubriques CRUD");
        jMenuCrudRubriques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudRubriquesActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudRubriques);
        jMenu1.add(jSeparator3);

        jMenuCrudMedia.setText("Média CRUD");
        jMenuCrudMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudMediaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudMedia);

        jMenuCrudAppreciation.setText("Appréciation CRUD");
        jMenuCrudAppreciation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCrudAppreciationActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCrudAppreciation);

        jMenuCrudJournalistes.setText("Journalistes CRUD");
        jMenu1.add(jMenuCrudJournalistes);
        jMenu1.add(jSeparator4);

        jMenuCrudCinemas.setText("Cinémas CRUD");
        jMenu1.add(jMenuCrudCinemas);
        jMenu1.add(jSeparator5);

        jMenuCrudGenerique.setText("Générique CRUD");
        jMenu1.add(jMenuCrudGenerique);

        menuBar.add(jMenu1);

        jMenuFenetre.setText("Fenêtre");

        jMenuItemMosaiqueHorizontale.setText("Horizontale");
        jMenuItemMosaiqueHorizontale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMosaiqueHorizontaleActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuItemMosaiqueHorizontale);

        jMenuItemMosaiqueVerticale.setText("Verticale");
        jMenuItemMosaiqueVerticale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMosaiqueVerticaleActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuItemMosaiqueVerticale);

        jMenuItemMozaiqueCascade.setText("Cascade");
        jMenuItemMozaiqueCascade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMozaiqueCascadeActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuItemMozaiqueCascade);

        jMenuItemFermer.setText("Fermer");
        jMenuItemFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFermerActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuItemFermer);

        jMenuItemFermerTout.setText("Fermer Tout");
        jMenuItemFermerTout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFermerToutActionPerformed(evt);
            }
        });
        jMenuFenetre.add(jMenuItemFermerTout);

        menuBar.add(jMenuFenetre);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Aide");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("A propos");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
//        JIFCrud jif = new JIFCrud();
//        this.desktopPane.add(jif);
        JIFMediaCRUD jif = new JIFMediaCRUD();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void jMenuItemFermerToutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFermerToutActionPerformed
        // TODO add your handling code here:
        JDesktopPane jdpBureau = this.desktopPane;
        //Récupération de toutes les InternalFrames et fermeture avec méthode setClosed(true)
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            for (int i = 0; i < tFrames.length; ++i) {
                tFrames[i].setClosed(true);
            }
        } catch (PropertyVetoException e) {
        }
    }//GEN-LAST:event_jMenuItemFermerToutActionPerformed

    private void jMenuItemFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFermerActionPerformed
        // TODO add your handling code here:
        JDesktopPane jdpBureau = this.desktopPane;
        //Récupération de toutes les InternalFrame et fermeture de la 1ere (indice 0)
        //avec méthode setClosed(true)
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            if (tFrames.length > 0) {
                tFrames[0].setClosed(true);
            }
        } catch (PropertyVetoException e) {
        }
    }//GEN-LAST:event_jMenuItemFermerActionPerformed

    private void jMenuItemMosaiqueHorizontaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMosaiqueHorizontaleActionPerformed
        // TODO add your handling code here:
        JDesktopPane jdpBureau = this.desktopPane;
        //On récupère toutes les InternalFrame
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();

        try {
            //INIT variable lx verticale à 0
            int ly = 0;
            //INIT largeur de chaques frames égale largeur de la MDI
            int liLargeurBureau = jdpBureau.getWidth();
            //INIT hauteur de chaques frames égale hauteur de la MDI
            int liHauteurBureau = jdpBureau.getHeight();
            //INIT hauteur chaques frame en fonction hauteur MDI divisée par nb de frames
            int liHauteur = liHauteurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(0, ly, liLargeurBureau, liHauteur);
                ly += liHauteur;
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItemMosaiqueHorizontaleActionPerformed

    private void jMenuItemMosaiqueVerticaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMosaiqueVerticaleActionPerformed
        // TODO add your handling code here:
        JDesktopPane jdpBureau = this.desktopPane;
        //On récupère toutes les InternalFrame
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();

        //Bloc TRY pour la méthode
        try {
            //INIT variable lx verticale à 0
            int lx = 0;
            //INIT largeur de chaques frames égale largeur de la MDI
            int liLargeurBureau = jdpBureau.getWidth();
            //INIT hauteur de chaques frames égale hauteur de la MDI
            int liHauteurBureau = jdpBureau.getHeight();
            //INIT largeur chaques frame par rapport largeur MDI divisée par nb de frames
            int liLargeur = liLargeurBureau / tFrames.length;

            for (int i = tFrames.length - 1; i >= 0; i--) {
                tFrames[i].setBounds(lx, 0, liLargeur, liHauteurBureau);
                lx += liLargeur;
            }
            //Bloc CATCH en cas d'erreur et d'exception
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItemMosaiqueVerticaleActionPerformed

    private void jMenuItemMozaiqueCascadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMozaiqueCascadeActionPerformed
        // TODO add your handling code here:
        JDesktopPane jdpBureau = this.desktopPane;
        //Récupération de toutes les InternalFrame
        JInternalFrame[] tFrames = jdpBureau.getAllFrames();
        try {
            //Affichage toutes frames avec même dimensions
            int lx = 0, ly = 0;
            //Positionnement avec un décalage en x et en y
            for (int i = tFrames.length - 1; i >= 0; i--) {
                // Arbitrairement a 500 sur 300
                tFrames[i].setBounds(lx, ly, 500, 300);
                lx += 30;
                ly += 30;
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jMenuItemMozaiqueCascadeActionPerformed

    private void jMenuCrudVillesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudVillesActionPerformed
        JIFCrudVille jif = new JIFCrudVille();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudVillesActionPerformed

    private void jMenuCrudPaysAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudPaysAddActionPerformed
        // TODO add your handling code here:
        JIFPaysAjout jif = new JIFPaysAjout();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudPaysAddActionPerformed

    private void jMenuCrudPaysDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudPaysDeleteActionPerformed
        // TODO add your handling code here:
        JIFPaysSupp jif = new JIFPaysSupp();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudPaysDeleteActionPerformed

    private void jMenuCrudPaysUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudPaysUpdateActionPerformed
        // TODO add your handling code here:
        JIFPaysModif jif = new JIFPaysModif();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudPaysUpdateActionPerformed

    private void jMenuCrudPaysVisuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudPaysVisuActionPerformed
        // TODO add your handling code here:
        JIFPaysVisu jif = new JIFPaysVisu();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudPaysVisuActionPerformed

    private void jMenuItemTransfertFichierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTransfertFichierActionPerformed
        // TODO add your handling code here:
        JIFTransfertFichier jif = new JIFTransfertFichier();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuItemTransfertFichierActionPerformed

    private void jMenuCrudDepartementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudDepartementsActionPerformed
        // TODO add your handling code here:
        JIFCrudDepartement jif = new JIFCrudDepartement();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudDepartementsActionPerformed

    private void jMenuCrudArrondissementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudArrondissementsActionPerformed
        // TODO add your handling code here:
        JIFCrudArrondissement jif = new JIFCrudArrondissement();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudArrondissementsActionPerformed

    private void jMenuCrudGenresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudGenresActionPerformed
        JIFCrudGenre jif = new JIFCrudGenre();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudGenresActionPerformed

    private void jMenuCrudRubriquesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudRubriquesActionPerformed
        JIFCrudRubrique jif = new JIFCrudRubrique();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudRubriquesActionPerformed

    private void jMenuCrudMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudMediaActionPerformed
        JIFCrudMedia jif = new JIFCrudMedia();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudMediaActionPerformed

    private void jMenuCrudAppreciationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCrudAppreciationActionPerformed
        JIFCrudAppreciation jif = new JIFCrudAppreciation();
        this.desktopPane.add(jif);
    }//GEN-LAST:event_jMenuCrudAppreciationActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Connexion.seDeconnecter(icnx);
    }//GEN-LAST:event_formWindowClosing
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuCrudAppreciation;
    private javax.swing.JMenuItem jMenuCrudArrondissements;
    private javax.swing.JMenuItem jMenuCrudCinemas;
    private javax.swing.JMenuItem jMenuCrudDepartements;
    private javax.swing.JMenuItem jMenuCrudGenerique;
    private javax.swing.JMenuItem jMenuCrudGenres;
    private javax.swing.JMenuItem jMenuCrudJournalistes;
    private javax.swing.JMenuItem jMenuCrudMedia;
    private javax.swing.JMenuItem jMenuCrudPaysAdd;
    private javax.swing.JMenuItem jMenuCrudPaysDelete;
    private javax.swing.JMenuItem jMenuCrudPaysUpdate;
    private javax.swing.JMenuItem jMenuCrudPaysVisu;
    private javax.swing.JMenuItem jMenuCrudRubriques;
    private javax.swing.JMenuItem jMenuCrudVilles;
    private javax.swing.JMenu jMenuFenetre;
    private javax.swing.JMenuItem jMenuItemFermer;
    private javax.swing.JMenuItem jMenuItemFermerTout;
    private javax.swing.JMenuItem jMenuItemMosaiqueHorizontale;
    private javax.swing.JMenuItem jMenuItemMosaiqueVerticale;
    private javax.swing.JMenuItem jMenuItemMozaiqueCascade;
    private javax.swing.JMenuItem jMenuItemTransfertFichier;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}

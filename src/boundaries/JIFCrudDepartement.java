package boundaries;

import daos.DepartementDAO;
import daos.Globale;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import entities.Departement;
import java.awt.Component;
import java.awt.Rectangle;
import java.util.List;
import javax.swing.JTextField;

/**
 *
 * @author quent
 */
public class JIFCrudDepartement extends javax.swing.JInternalFrame {

    private Connection icnx;
    private DefaultTableModel ldtm;
    private Object[] tLigne;

    /**
     *
     */
    public JIFCrudDepartement() {
        initComponents();
        setVisible(true);

        // Bloc try/catch pour la connexion et l'instanciation de la jTable
        try {
            icnx = Globale.getCnx();

            System.out.println(icnx);

            ldtm = (DefaultTableModel) jTableDepartement.getModel();

        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }

        remplirJTableDepartement();

    }// Fin constructeur

    /**
     *
     */
    private void remplirJTableDepartement() {
        Departement dep;

        // Boucle permettant de mettre à jour la table département
        for (int i = ldtm.getRowCount() - 1; i >= 0; i--) {
            ldtm.removeRow(i);
        }

        try {
            DepartementDAO dao3 = new DepartementDAO(icnx);
            List<Departement> liste = dao3.selectAll();
            for (int i = 0; i < liste.size(); i++) {
                dep = liste.get(i);
                tLigne = new Object[3];
                tLigne[0] = dep.getIdDepartement();
                tLigne[1] = dep.getCodeDepartement();
                tLigne[2] = dep.getNomDepartement();
                ldtm.addRow(tLigne);
            }
        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }
    }// Fin remplirJTableDepartement

    private void cls() {
        jTextFieldId.setText("");

        try {
            Component[] tComposants = getContentPane().getComponents();
            for (int i = 0; i < tComposants.length; i++) {
                Object objet = tComposants[i];
                if (objet.getClass().toString().equals("class javax.swing.JTextField")) {
                    JTextField composant = (JTextField) objet;
                    composant.setText("");
                }
            }
        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }
    }// Fin cls

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDepartement = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldNom = new javax.swing.JTextField();
        jButtonAJouter = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();
        jButtonClear = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CRUD Départements");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jTableDepartement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_departement", "CODE_departement", "NOM_departement"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDepartement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDepartementMouseClicked(evt);
            }
        });
        jTableDepartement.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableDepartementKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDepartement);

        jLabel1.setText("ID");

        jLabel2.setText("Code");

        jLabel3.setText("Nom");

        jTextFieldId.setEditable(false);
        jTextFieldId.setBackground(new java.awt.Color(255, 51, 51));
        jTextFieldId.setBorder(null);

        jButtonAJouter.setText("Ajouter");
        jButtonAJouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAJouterActionPerformed(evt);
            }
        });

        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jLabelMessage.setText("Message");

        jButtonClear.setText("CLS");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMessage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNom)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(64, 64, 64))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonClear)
                                .addGap(61, 61, 61)
                                .addComponent(jButtonAJouter)
                                .addGap(56, 56, 56)))
                        .addComponent(jButtonModifier)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSupprimer)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAJouter)
                    .addComponent(jButtonModifier)
                    .addComponent(jButtonSupprimer)
                    .addComponent(jButtonClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jLabelMessage)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAJouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAJouterActionPerformed
        int liAffecte = 0;

        try {
            DepartementDAO dao = new DepartementDAO(icnx);

            // Insert
            Departement di = new Departement(jTextFieldCode.getText(), jTextFieldNom.getText());
            liAffecte = dao.insert(di);
            if (liAffecte == 1) {
                icnx.commit();
                remplirJTableDepartement();
                int liMax = jTableDepartement.getRowCount() - 1;
                jTableDepartement.getSelectionModel().setSelectionInterval(liMax, liMax);
                jTableDepartement.scrollRectToVisible(new Rectangle(jTableDepartement.getCellRect(liMax, 0, true)));
            }
            jLabelMessage.setText("Département ajouté : " + Integer.toString(liAffecte));

            cls();

        } catch (SQLException e) {
            jLabelMessage.setText(e.getMessage());
        }
    }//GEN-LAST:event_jButtonAJouterActionPerformed

    private void jTableDepartementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDepartementMouseClicked
        // TODO add your handling code here:
        jLabelMessage.setText("");
        int liLigne = jTableDepartement.getSelectedRow();

        String lsID = jTableDepartement.getValueAt(liLigne, 0).toString();
        String lsCode = jTableDepartement.getValueAt(liLigne, 1).toString();
        String lsNom = jTableDepartement.getValueAt(liLigne, 2).toString();

        jTextFieldId.setText(lsID);
        jTextFieldCode.setText(lsCode);
        jTextFieldNom.setText(lsNom);
    }//GEN-LAST:event_jTableDepartementMouseClicked

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        if (jTextFieldId.getText().equals("ID")) {
            jLabelMessage.setText("Veuillez sélectionner une ligne !");
        } else {
            int liAffecte = 0;

            try {
                DepartementDAO dao = new DepartementDAO(icnx);

                // Update
                Departement d = new Departement(Integer.valueOf(jTextFieldId.getText()), jTextFieldCode.getText(), jTextFieldNom.getText());
                liAffecte = dao.update(d);
                if (liAffecte == 1) {
                    icnx.commit();
                    remplirJTableDepartement();
                    cls();
                }
                jLabelMessage.setText("Département modifié : " + Integer.toString(liAffecte));

            } catch (SQLException e) {
                jLabelMessage.setText(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        if (jTextFieldId.getText().equals("ID")) {
            jLabelMessage.setText("Veuillez sélectionner une ligne !");
        } else {
            int liAffecte = 0;
            System.out.println(jLabel1.getText());
            try {
                DepartementDAO dao = new DepartementDAO(icnx);

                // Delete
                Departement dd = new Departement(Integer.valueOf(jTextFieldId.getText()), jTextFieldCode.getText(), jTextFieldNom.getText());
                liAffecte = dao.delete(dd);
                icnx.commit();
                if (liAffecte == 1) {
                    icnx.commit();
                    remplirJTableDepartement();
                    cls();
                }
                jLabelMessage.setText("Supprimé : " + Integer.toString(liAffecte));

            } catch (SQLException e) {
                jLabelMessage.setText(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // DECONNEXION DE LA BD
//        try {
//            icnx.close();
//        } catch (SQLException ex) {
//            System.err.println(ex.getMessage());
//        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        jTextFieldId.setText("");

        try {
            Component[] tComposants = getContentPane().getComponents();
            for (int i = 0; i < tComposants.length; i++) {
                Object objet = tComposants[i];
                if (objet.getClass().toString().equals("class javax.swing.JTextField")) {
                    JTextField composant = (JTextField) objet;
                    composant.setText("");
                }
            }
        } catch (Exception ex) {
            jLabelMessage.setText(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jTableDepartementKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableDepartementKeyReleased
        jTableDepartementMouseClicked(null);
    }//GEN-LAST:event_jTableDepartementKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAJouter;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDepartement;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables
}

package boundaries;

import daos.Globale;
import java.sql.*;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author quent
 */
public class JIFCrud extends javax.swing.JInternalFrame {

    private Connection icnx;
    private DatabaseMetaData ldbmd;
    private ResultSet lrsTables;
    private DefaultComboBoxModel idbcm;
    private Object[] tEntetes;
    private DefaultTableModel idtm;
    private JLabel[] tLabels;
    private JTextField[] tJTexts;

    private PreparedStatement lpst;
    private ResultSetMetaData lrsmd;
    private ResultSet lrs;

    private Object[][] tDataTable;
    private Object[] tDataLigne;
//    StringBuilder lsbInfos = new StringBuilder();

    /**
     * Creates new form JIFCrud
     */
    public JIFCrud() {
        initComponents();
        setVisible(true);

        icnx = Globale.getCnx();
        String tTypes[] = null;
        try {
            //************** Remplissage de la jComboBox avec les tables de la DB cinescope2017 **************\\
            /*
             * getMetaData permet d'accéder aux infos de la métabase (le dictionnaire de la DB)
             */
            ldbmd = icnx.getMetaData();
            /*
             * getTables ("bd", "schemaPattern", "TableNamePattern", type[]). Cela renvoie la 
             * liste des tables d'une DB. Les noms de tables sont dans la colonne 3.
             */
            lrsTables = ldbmd.getTables("cinescope2017", "", "", tTypes);
            /*
             * Déclaration d'un DefaultComboBoxModel
             */
            idbcm = new DefaultComboBoxModel();
            /*
             * Boucle pour récupérer tout les enregistrements (tout les noms de table de la DB)
             */
            while (lrsTables.next()) {
                /*
                 * Ajout au DefaultComboBoxModel de la colonne qui nous intéresse dans les infos 
                 * récupérées.
                 */
                idbcm.addElement(lrsTables.getString(3));
            }
            /*
             * On intègre à la jComboBox de notre Frame les infos enregistrées dans le DefaultComboBoxModel
             */
            jComboBoxTables.setModel(idbcm);
            /*
             * Fermeture
             */
            lrsTables.close();


        } catch (SQLException e) {
            jLabelMessage.setText(e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelChoixTable = new javax.swing.JLabel();
        jComboBoxTables = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDB = new javax.swing.JTable();
        jLabelMessage = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CRUD Cinéscope");

        jLabelChoixTable.setText("Choisissez une table de la base de données");

        jComboBoxTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTablesActionPerformed(evt);
            }
        });

        jTableDB.setBackground(new java.awt.Color(153, 255, 255));
        jTableDB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDB);

        jLabelMessage.setText("Message");
        jLabelMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane2.setMaximumSize(new java.awt.Dimension(600, 600));

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 350));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, Short.MAX_VALUE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, Short.MAX_VALUE, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelChoixTable)
                                .addGap(49, 49, 49)
                                .addComponent(jComboBoxTables, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelChoixTable)
                    .addComponent(jComboBoxTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDBMouseClicked
        // 
        int liRow = jTableDB.getSelectedRow();
        for (int i = 0; i < jTableDB.getColumnCount(); i++) {
            tJTexts[i].setText(jTableDB.getValueAt(liRow, i + 1).toString());
        }
    }//GEN-LAST:event_jTableDBMouseClicked

    private void jComboBoxTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTablesActionPerformed
        
                
        try {
            //************** Remplissage de la jTableDB avec une table sélectionnée de la jComboBox **************\\ 
            String lsNomTable = jComboBoxTables.getSelectedItem().toString();
            // --- Connexion a la BD
            lpst = icnx.prepareStatement("SELECT * FROM " + lsNomTable, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            lrs = lpst.executeQuery();
            lrsmd = lrs.getMetaData();

            // --- Nombre de colonnes du curseur
            int liColonnes = lrsmd.getColumnCount();

            // --- Noms des colonnes
            tEntetes = new Object[liColonnes];
            for (int i = 0; i < liColonnes; i++) {
                tEntetes[i] = lrsmd.getColumnName(i + 1);
            }

            // --- Pour les donnees de la JTable
            // --- Pour obtenir le nombre de lignes du curseur
            lrs.last();
            int liLignes = lrs.getRow();
            tDataTable = new Object[liLignes][liColonnes];

            lrs.beforeFirst();
            int i = 0;
            // --- Balayage des lignes
            while (lrs.next()) {
                // --- Balayage des colonnes pour construire une ligne
                tDataLigne = new Object[liColonnes];
                for (int j = 0; j < liColonnes; j++) {
                    if (lrs.getObject(j + 1) == null) {
                        tDataLigne[j] = "NUL";
                    } else {
                        tDataLigne[j] = lrs.getObject(j + 1).toString();
                    }
                }
                tDataTable[i] = tDataLigne;
                i++;
            }
            // --- Affectation des tableaux d'objets a la JTable
            idtm = new DefaultTableModel(tDataTable, tEntetes);
            jTableDB.setModel(idtm);

            // Fermetures
            lrs.close();
            lpst.close();

            /*
             Dyn des JLabels et des JTextFields
             */
            int iiPosX = 0;
            int iiPosY = 0;
            tLabels = new JLabel[tEntetes.length];
            tJTexts = new JTextField[tEntetes.length];
            
            for (i = 0; i < tLabels.length; i++) {
                tLabels[i] = new JLabel(tEntetes[i].toString());
                tJTexts[i] = new JTextField();

                
                jPanel1.add(tLabels[i]);
                tLabels[i].setSize(200, 30);
                tLabels[i].setLocation(iiPosX + 40, iiPosY + 10);
                tLabels[i].setVisible(true);

                jPanel1.add(tJTexts[i]);
                tJTexts[i].setSize(150, 30);
                tJTexts[i].setLocation(iiPosX + 200, iiPosY + 10);
                tJTexts[i].setVisible(true);

                iiPosY += 30;

            }
//            jPanel1.remove(this);
            this.getContentPane().repaint();

        } catch (SQLException ex) {
            jLabelMessage.setText(ex.getMessage());
        }
    }//GEN-LAST:event_jComboBoxTablesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBoxTables;
    private javax.swing.JLabel jLabelChoixTable;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDB;
    // End of variables declaration//GEN-END:variables
}
